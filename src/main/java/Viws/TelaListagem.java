/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Viws;

import data.Podcast;
import data.PodcastDAO;
import data.Usuario;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**Classe que contem a listagem de Podcasts

 */
public class TelaListagem extends javax.swing.JFrame {

    /**
     * Creates new form TelaListagem
     */
    public TelaListagem() {
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblTitulo = new javax.swing.JLabel();
        lblListagem = new javax.swing.JLabel();
        lblPesquisar = new javax.swing.JLabel();
        txtPesquisar = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPodcasts = new javax.swing.JTable();
        btnCadastrar = new javax.swing.JButton();
        btnPesquisar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblTitulo.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        lblTitulo.setText("Cenaflix");

        lblListagem.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblListagem.setText("Listagem");

        lblPesquisar.setText("Pesquisar podcast por produtor");

        tblPodcasts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Produtor", "Nome do Episódio", "Nº Episódio", "Duração", "URL do Repositorio"
            }
        ));
        jScrollPane1.setViewportView(tblPodcasts);

        btnCadastrar.setText("Cadastrar");
        btnCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarActionPerformed(evt);
            }
        });

        btnPesquisar.setText("Pesquisar");
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });

        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(230, 230, 230)
                        .addComponent(lblTitulo))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(247, 247, 247)
                        .addComponent(lblListagem))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 569, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblPesquisar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnPesquisar))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnCadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(lblTitulo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblListagem)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPesquisar)
                    .addComponent(txtPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPesquisar))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    /**botão para abrir a tela de cadastro de podcast
     * 
     * @param evt 
     */
    private void btnCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarActionPerformed
       
        TelaCadastroPodcast telaCadastroPodcast = new TelaCadastroPodcast();
        
        
        telaCadastroPodcast.setVisible(true);
        
    }//GEN-LAST:event_btnCadastrarActionPerformed

    
    /**botão de pesquisar Podcast por produtor
     * 
     * @param evt 
     */
    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
       
        if(!validaCampoPesquisa()) {
       
            try{
              PodcastDAO podcastDAO = new PodcastDAO();
              List<Podcast> podcasts = podcastDAO.listar(txtPesquisar.getText());

              preencheTabela(podcasts);
              
          }catch(Exception e){
              JOptionPane.showMessageDialog(this, "Ocorreu uma falha:\n" + e.getMessage());
          }
        }
    }//GEN-LAST:event_btnPesquisarActionPerformed

    
    /**botão de exclusão de Podcast
     * 
     * @param evt 
     */
    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        
        
        try{
          if(tblPodcasts.getSelectedRow() >= 0){ //verifica se há algo selecionado na tabela
              //obtém o valor da coluna id da linha selecionada
              String id = (String)tblPodcasts.getValueAt(tblPodcasts.getSelectedRow(), 0);
              //janela de confirmação
              int resposta = JOptionPane.showConfirmDialog(this, "Deseja mesmo excluir o registro " + id + "?");
              if(resposta == 0)//0- yes, 1- no, 2- cancel
              {   
                  //realizando a exclusão
                  PodcastDAO podcastDAO = new PodcastDAO();            
                  podcastDAO.excluir(Integer.parseInt(id));
                  JOptionPane. showMessageDialog(this, "Registro excluído com sucesso");
                  //refazendo a pesquisa para atualizar a tabela na tela
                  btnPesquisarActionPerformed(evt);
              }
          }
      }catch(Exception e){
          JOptionPane.showMessageDialog(this, "Ocorreu uma falha:\n" + e.getMessage());
      }
       
    }//GEN-LAST:event_btnExcluirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaListagem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaListagem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaListagem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaListagem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaListagem().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCadastrar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblListagem;
    private javax.swing.JLabel lblPesquisar;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JTable tblPodcasts;
    private javax.swing.JTextField txtPesquisar;
    // End of variables declaration//GEN-END:variables


    /**preenche a tabela de podcasts com os dados do podcast encontrado na pesquisa
     * 
     * @param podcasts 
     */
    public void preencheTabela(List<Podcast> podcasts){     
        
      String columns[] = {"ID", "Produtor", "Nome do Episódio", "Nº Episódio", "Duração", "URL do Repositorio"};
      String dados[][] = new String[podcasts.size()][columns.length];
      
      int i=0;
      for(Podcast p: podcasts){
          dados[i] = new String[]{ 
              String.valueOf(p.getId()), 
              p.getProdutor(), 
              p.getNome_episodio(), 
              String.valueOf(p.getNumero_episodio()),
              p.getDuracao(),
              p.getUrl_repositorio()
          };
          i++;
      }
      
      DefaultTableModel model = new DefaultTableModel(dados, columns);
      tblPodcasts.setModel(model);
    }     


 /**valida campo de pesquisa
 * 
 * @return 
 */
    private boolean validaCampoPesquisa(){
        
        
        String pesquisa = txtPesquisar.getText();
     
        boolean valido = true; 

    //     valida se os campos estão preenchidos
        if(txtPesquisar.getText().trim().isEmpty()){
        
            JOptionPane.showMessageDialog(rootPane, "O campo deve ser preenchido. ");
         
        } else{
         
            boolean strPesquisa = pesquisa.matches("[a-zA-Z]{1,150}");
         
        //     valida se os campos estão preenchidos corretamente 
            if(strPesquisa == false){
         
            JOptionPane.showMessageDialog(rootPane, "ATENÇÃO! O campo Pesquisa  deve conter apenas letras.");
          
            } else{
         
                valido = false; // se naõ estiver preenchido retorna false
            }
        }
     
        return valido;  //  se estiver preenchido retorna true
     
    }


    
    /**valida qual as permissões de usuário de acordo com o usuário que estiver usando o sistema
     * 
     * @param usuario 
     */
    public void validaUsuario(Usuario usuario) {
        
        if( usuario.getTipo().equalsIgnoreCase("Administrador") ) {
            
         } 
        else if ( usuario.getTipo().equalsIgnoreCase("Operador") ) {
            
            btnExcluir.setEnabled(true);
            btnExcluir.setVisible(false);
          
        }else {
            
            btnExcluir.setEnabled(true);
            btnExcluir.setVisible(false);
            
            btnCadastrar.setEnabled(true);
            btnCadastrar.setVisible(false);
            
        }
    }

}
